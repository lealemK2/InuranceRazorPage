// <auto-generated />
using System;
using InuranceRazorPage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InuranceRazorPage.Migrations
{
    [DbContext(typeof(InuranceRazorPageContext))]
    [Migration("20221229085719_dec29")]
    partial class dec29
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InuranceRazorPage.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Createdon")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Fathername")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("LocationId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("HouseNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("Kebele")
                        .HasColumnType("integer");

                    b.Property<int>("SubcityId")
                        .HasColumnType("integer");

                    b.Property<int?>("Woreda")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubcityId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Subcity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubcityId")
                        .HasColumnType("integer");

                    b.Property<int>("kebele")
                        .HasColumnType("integer");

                    b.Property<int>("woreda")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.Subcity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Subcities");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.SubcityRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("SubcityId")
                        .HasColumnType("integer");

                    b.Property<int>("WoredaRange")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubcityId")
                        .IsUnique();

                    b.ToTable("SubcityRanges");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.WoredaRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KebeleRange")
                        .HasColumnType("integer");

                    b.Property<int>("SubcityId")
                        .HasColumnType("integer");

                    b.Property<int>("Woreda")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubcityId");

                    b.ToTable("WoredaRanges");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.Account", b =>
                {
                    b.HasOne("InuranceRazorPage.Models.Address", "Address")
                        .WithOne("Account")
                        .HasForeignKey("InuranceRazorPage.Models.Account", "AddressId");

                    b.HasOne("InuranceRazorPage.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("InuranceRazorPage.Models.Role", "role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Location");

                    b.Navigation("role");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.Address", b =>
                {
                    b.HasOne("InuranceRazorPage.Models.Subcity", "Subcity")
                        .WithMany()
                        .HasForeignKey("SubcityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcity");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.SubcityRange", b =>
                {
                    b.HasOne("InuranceRazorPage.Models.Subcity", "Subcity")
                        .WithMany()
                        .HasForeignKey("SubcityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcity");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.WoredaRange", b =>
                {
                    b.HasOne("InuranceRazorPage.Models.Subcity", "Subcity")
                        .WithMany()
                        .HasForeignKey("SubcityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcity");
                });

            modelBuilder.Entity("InuranceRazorPage.Models.Address", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
